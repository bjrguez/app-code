---
title: "App-presentation"
author: "Brenda Rodriguez"
date: "28/1/2018"
output:
  ioslides_presentation: default
  beamer_presentation: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

## Instruction of exercise
This peer assessed assignment has two parts. First, you will create a Shiny application and deploy it on Rstudio's servers. Second, you will use Slidify or Rstudio Presenter to prepare a reproducible pitch presentation about your application.

## Description of the app
Exercise taken from the examples shown during the course. Interactive graphic, makes use of checkbox, textbox, etc.

imagen: ![](Coursera/C9-s1/Grafica.png)

My server.R and ui.R code are in github
https://github.com/bjrguez/app

## Code ui
```{r, echo= TRUE, eval= FALSE}
ui <- fluidPage(
   # Application title
   titlePanel("Predict Horsepower from MPG"),
   sidebarLayout(
      sidebarPanel(
         sliderInput("sliderMPG", "What is the MPG of the car?", 10, 35, value=20),
         checkboxInput("showModel1", "Show/Hide Model 1", value= TRUE),
         checkboxInput("showModel2", "Show/Hide Model 2", value= TRUE)
      ),
      
      # Show a plot of the generated distribution
      mainPanel(
         plotOutput("plot1"),
         h3("Predicted Horsepower from Model 1:"), textOutput("pred1"),
         h3("Predicted Horsepower from Model 2:"), textOutput("pred2")
)))
```

## Code server.R 
```{r, echo= TRUE, eval= FALSE}
server <- function(input, output) {
   mtcars$mpgsp<- ifelse(mtcars$mpg - 20 > 0, mtcars$mpg - 20, 0)
   model1 <- lm(hp ~ mpg, data = mtcars)
   model2 <- lm(hp ~ mpgsp + mpg, data = mtcars)
   
   model1pred <- reactive({mpgInput <- input$sliderMPG
     predict(model1, newdata= data.frame(mpg= mpgInput))
   })
   
   model2pred <- reactive({
     mpgInput <- input$sliderMPG
     predict(model2, newdata= data.frame(mpg= mpgInput, mpgsp= ifelse(mpgInput - 20 > 0, mpgInput - 20, 0)))
   })
   
   output$plot1 <- renderPlot({
     mpgInput <- input$sliderMPG
     plot(mtcars$mpg, mtcars$hp, xlab = "Miles per gallon",
          ylab= "Horse power", bty= "n", pch= 16,
          xlim= c(10, 35), ylim= c(50, 350))
     if(input$showModel1){ abline(model1, col= "red", lwd= 2) }
     if(input$showModel2){
       model2lines<- predict(model2, newdata= data.frame(
         mpg= 10:35, mpgsp= ifelse(10:35 - 20 > 0, 10:35 - 20, 0)))
       lines(10:35, model2lines, col= "blue", lwd= 2)
     }
     legend(25, 250, c("Model 1 prediction", "Model 2 prediction"), pch= 16,
            col= c("red", "blue"), bty= "n", cex = 1.2)
     points(mpgInput, model1pred(), col="red", pch=16, cex=2)
     points(mpgInput, model2pred(), col="red", pch=16, cex=2)
   })
   output$pred1 <- renderText({ model1pred() })
   output$pred2 <- renderText({ model2pred() })
}
```
